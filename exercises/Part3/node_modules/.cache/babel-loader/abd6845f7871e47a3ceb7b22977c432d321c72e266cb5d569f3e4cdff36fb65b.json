{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\React\\\\Full Stack Open\\\\exercises\\\\Part3\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Content from './components/Content';\nimport Filter from './components/Filter';\nimport Notification from './components/Notification';\nimport PersonForm from './components/PersonForm';\nimport personService from './services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [persons, setPersons] = useState([]);\n  const [allPersons, setAllPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [newFilter, setNewFilter] = useState('');\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setAllPersons(initialPersons);\n    });\n  }, []);\n  const addPerson = event => {\n    event.preventDefault();\n    const person = allPersons.filter(person => person.name === newName);\n    const personToAdd = person[0];\n    const updatedPerson = {\n      ...personToAdd,\n      number: newNumber\n    };\n    if (person.length !== 0) {\n      if (window.confirm(`${personToAdd.name} is already added to the phonebook, replace the old number with a new one ?`)) {\n        personService.update(updatedPerson.id, updatedPerson).then(returnedPerson => {\n          console.log(`${returnedPerson.name} successfully updated`);\n          setAllPersons(allPersons.map(personItem => personItem.id !== personToAdd.id ? personItem : returnedPerson));\n          setNewName('');\n          setNewNumber('');\n          setMessage(`${updatedPerson.name} was successfully updated`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        }).catch(error => {\n          console.log(error);\n          setAllPersons(allPersons.filter(person => person.id !== updatedPerson.id));\n          setNewName('');\n          setNewNumber('');\n          setMessage(`[ERROR] ${updatedPerson.name} was already deleted from server`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n      }\n    } else {\n      const personToAdd = {\n        name: newName,\n        number: newNumber\n      };\n      personService.create(personToAdd).then(returnedPerson => {\n        setAllPersons(allPersons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n        setMessage(`${newName} was successfully added`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      }).catch(error => {\n        setMessage(`[ERROR] ${error.response.data.error}`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        console.log(error.response.data);\n      });\n    }\n  };\n  const deletePerson = id => {\n    const filteredPerson = allPersons.filter(person => person.id === id);\n    const personName = filteredPerson[0].name;\n    const personId = filteredPerson[0].id;\n    if (window.confirm(`Delete ${personName} ?`)) {\n      personService.remove(personId);\n      console.log(`${personName} successfully deleted`);\n      setMessage(`${personName} was successfully deleted`);\n      setAllPersons(allPersons.filter(person => person.id !== personId));\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    }\n  };\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n  const handleFilterChange = event => {\n    setNewFilter(event.target.value);\n    const regex = new RegExp(newFilter, 'i');\n    const filteredPersons = () => allPersons.filter(person => person.name.match(regex));\n    setPersons(filteredPersons);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: newFilter,\n      onChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add new person\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      onSubmit: addPerson,\n      newName: newName,\n      handleNameChange: handleNameChange,\n      newNumber: newNumber,\n      handleNumberChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      persons: persons,\n      allPersons: allPersons,\n      deletePerson: deletePerson\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"i8VDzUSE0gpWUarh2muoOCBLnLk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Content","Filter","Notification","PersonForm","personService","App","persons","setPersons","allPersons","setAllPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","message","setMessage","getAll","then","initialPersons","addPerson","event","preventDefault","person","filter","name","personToAdd","updatedPerson","number","length","window","confirm","update","id","returnedPerson","console","log","map","personItem","setTimeout","catch","error","create","concat","response","data","deletePerson","filteredPerson","personName","personId","remove","handleNameChange","target","value","handleNumberChange","handleFilterChange","regex","RegExp","filteredPersons","match"],"sources":["D:/Study/React/Full Stack Open/exercises/Part3/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Content from './components/Content'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport PersonForm from './components/PersonForm'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([])\r\n  const [ allPersons, setAllPersons] = useState([])\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [newFilter, setNewFilter] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n      setAllPersons(initialPersons)\r\n    })\r\n  }, [])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n    const person = allPersons.filter((person) =>\r\n        person.name === newName\r\n    )\r\n\r\n    const personToAdd = person[0]\r\n    const updatedPerson = { ...personToAdd, number: newNumber }\r\n\r\n    if (person.length !== 0) {\r\n      if (window.confirm(`${personToAdd.name} is already added to the phonebook, replace the old number with a new one ?`)) {\r\n        personService\r\n          .update(updatedPerson.id, updatedPerson).then(returnedPerson => {\r\n            console.log(`${returnedPerson.name} successfully updated`)\r\n            setAllPersons(allPersons.map(personItem => personItem.id !== personToAdd.id ? personItem : returnedPerson))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setMessage(\r\n              `${updatedPerson.name} was successfully updated`\r\n            )\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            }, 5000)\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n            setAllPersons(allPersons.filter(person => person.id !== updatedPerson.id))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setMessage(\r\n              `[ERROR] ${updatedPerson.name} was already deleted from server`\r\n            )\r\n            setTimeout(() => {\r\n              setMessage(null)\r\n            }, 5000)\r\n          })\r\n      }\r\n    } else {\r\n        const personToAdd = {\r\n            name: newName,\r\n            number: newNumber\r\n          }\r\n          personService\r\n            .create(personToAdd)\r\n            .then(returnedPerson => {\r\n              setAllPersons(allPersons.concat(returnedPerson))\r\n              setNewName('')\r\n              setNewNumber('')\r\n              setMessage(\r\n                `${newName} was successfully added`\r\n              )\r\n              setTimeout(() => {\r\n                setMessage(null)\r\n              }, 5000)\r\n            })\r\n            .catch(error => {\r\n              setMessage(\r\n                `[ERROR] ${error.response.data.error}`\r\n              )\r\n              setTimeout(() => {\r\n                setMessage(null)\r\n              }, 5000)\r\n              console.log(error.response.data)\r\n            })\r\n    }\r\n  }\r\n\r\n  const deletePerson = (id) => {\r\n    const filteredPerson = allPersons.filter(person => person.id === id)\r\n    const personName = filteredPerson[0].name\r\n    const personId = filteredPerson[0].id\r\n    if (window.confirm(`Delete ${personName} ?`)) {\r\n      personService\r\n        .remove(personId)\r\n      console.log(`${personName} successfully deleted`)\r\n      setMessage(\r\n        `${personName} was successfully deleted`\r\n      )\r\n      setAllPersons(allPersons.filter(person => person.id !== personId))\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value)\r\n    const regex = new RegExp( newFilter, 'i' );\r\n    const filteredPersons = () => allPersons.filter(person => person.name.match(regex))\r\n    setPersons(filteredPersons)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} />\r\n      <Filter value={newFilter} onChange={handleFilterChange} />\r\n      <h2>Add new person</h2>\r\n      <PersonForm onSubmit={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\r\n      <h2>Numbers</h2>\r\n      <Content persons={persons} allPersons={allPersons} deletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}