{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\React\\\\Full Stack Open\\\\exercises\\\\Part3\\\\src\\\\components\\\\Content.js\";\nimport React from 'react';\nimport Person from './Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = _ref => {\n  let {\n    persons,\n    allPersons,\n    deletePerson\n  } = _ref;\n  console.log(persons.length);\n  if (persons.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: allPersons.map((person, i) => /*#__PURE__*/_jsxDEV(Person, {\n        person: person,\n        deletePerson: deletePerson\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: persons.map((person, i) => /*#__PURE__*/_jsxDEV(Person, {\n        person: person,\n        deletePerson: deletePerson\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c = Content;\nexport default Content;\nvar _c;\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"names":["React","Person","Content","persons","allPersons","deletePerson","console","log","length","map","person","i"],"sources":["D:/Study/React/Full Stack Open/exercises/Part3/src/components/Content.js"],"sourcesContent":["import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Content = ({persons, allPersons, deletePerson}) => {\r\n  console.log(persons.length)\r\n  if (persons.length === 0) {\r\n    return (\r\n      <ul>\r\n        {allPersons.map((person, i) =>\r\n          <Person key={i} person={person} deletePerson={deletePerson} />\r\n        )}\r\n      </ul>\r\n    )\r\n  } else {\r\n    return (\r\n      <ul>\r\n        {persons.map((person, i) =>\r\n          <Person key={i} person={person} deletePerson={deletePerson} />\r\n        )}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Content"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAAA;AAE7B,MAAMC,OAAO,GAAG,QAAyC;EAAA,IAAxC;IAACC,OAAO;IAAEC,UAAU;IAAEC;EAAY,CAAC;EAClDC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAACK,MAAM,CAAC;EAC3B,IAAIL,OAAO,CAACK,MAAM,KAAK,CAAC,EAAE;IACxB,oBACE;MAAA,UACGJ,UAAU,CAACK,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBACxB,QAAC,MAAM;QAAS,MAAM,EAAED,MAAO;QAAC,YAAY,EAAEL;MAAa,GAA9CM,CAAC;QAAA;QAAA;QAAA;MAAA,QAAgD;IAC/D;MAAA;MAAA;MAAA;IAAA,QACE;EAET,CAAC,MAAM;IACL,oBACE;MAAA,UACGR,OAAO,CAACM,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBACrB,QAAC,MAAM;QAAS,MAAM,EAAED,MAAO;QAAC,YAAY,EAAEL;MAAa,GAA9CM,CAAC;QAAA;QAAA;QAAA;MAAA,QAAgD;IAC/D;MAAA;MAAA;MAAA;IAAA,QACE;EAET;AACF,CAAC;AAAA,KAnBKT,OAAO;AAqBb,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}